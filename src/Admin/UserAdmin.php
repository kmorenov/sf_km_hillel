<?php
/**
 * Created by PhpStorm.
 * User: kostya
 * Date: 30/10/18
 * Time: 6:11 PM
 */

namespace App\Admin;

use Sonata\AdminBundle\Admin\AbstractAdmin;
use Sonata\AdminBundle\Datagrid\ListMapper;
use Sonata\AdminBundle\Datagrid\DatagridMapper;
use Sonata\AdminBundle\Form\FormMapper;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\PasswordType;

use Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder;

class UserAdmin extends AbstractAdmin
{
    protected function configureFormFields(FormMapper $formMapper)
    {
        $formMapper->add('username', TextType::class)
            ->add('email', TextType::class)
            ->add('password', PasswordType::class)
            ->add('roles')
            ->add('salt')
            ->add('confirmation_token', TextType::class);
    }

    protected function configureDatagridFilters(DatagridMapper $datagridMapper)
    {
        $datagridMapper->add('username')
            ->add('email')
//            ->add('password')
            ->add('roles');
    }

    protected function configureListFields(ListMapper $listMapper)
    {
        $listMapper->addIdentifier('id')
            ->addIdentifier('username')
            ->add('email')
//            ->add('password')
            ->add('roles');
    }

    public function preUpdate($object)
    {
        dump($object);
        dump($this->getSubject());
        $uniqid = $this->getRequest()->query->get('uniqid');
        dump($uniqid);
        $encoder = new MessageDigestPasswordEncoder('sha512', true, 10);
        dump($encoder);
        $formData = $this->getRequest()->request->get($uniqid);
        dump($formData);
        if(array_key_exists('password', $formData) && $formData['password'] !== null && strlen($formData['password']) > 0) {
            $object->setPassword($encoder->encodePassword($formData['password'], $object->getSalt(uniqid(mt_rand(),true))));
        }

/*        dump($this->getConfigurationPool()->getContainer());
        $this->getConfigurationPool()->getContainer()->get('maker.auto_command.make_serializer_encoder');
        parent::preUpdate($object); // TODO: Change the autogenerated stub*/
    }
}
